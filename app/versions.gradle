ext {
    buildNoDevelop = 1
    buildNoProd = 1
    buildGitHash = ""
}
def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}
task updateVersion {
    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        int valueProd = 0
        int valueDev = 0
        def runTasks = gradle.startParameter.taskNames
        if (':app:generateReleaseSources' in runTasks || ':app:businessCompileReleaseSources' in runTasks) {
            valueProd = 1
        } else {
            valueDev = 1
        }
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        buildNoDevelop = versionProps['BUILD_NUMBER_DEVELOPMENT'].toInteger() + valueDev
        buildNoProd = versionProps['BUILD_NUMBER_PRODUCTION'].toInteger() + valueProd
        buildGitHash = getGitHash()
        versionProps['BUILD_NUMBER_DEVELOPMENT'] = buildNoDevelop.toString()
        versionProps['BUILD_NUMBER_PRODUCTION'] = buildNoProd.toString()
        versionProps['BUILD_GIT_HASH'] = buildGitHash.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    }
}